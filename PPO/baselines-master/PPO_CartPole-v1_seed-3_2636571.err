OMP: Info #155: KMP_AFFINITY: Initial OS proc set respected: 20-23
OMP: Info #217: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #157: KMP_AFFINITY: 4 available OS procs
OMP: Info #158: KMP_AFFINITY: Uniform topology
OMP: Info #288: KMP_AFFINITY: topology layer "NUMA domain" is equivalent to "socket".
OMP: Info #288: KMP_AFFINITY: topology layer "LL cache" is equivalent to "socket".
OMP: Info #288: KMP_AFFINITY: topology layer "L3 cache" is equivalent to "socket".
OMP: Info #288: KMP_AFFINITY: topology layer "L2 cache" is equivalent to "core".
OMP: Info #288: KMP_AFFINITY: topology layer "L1 cache" is equivalent to "core".
OMP: Info #192: KMP_AFFINITY: 1 socket x 4 cores/socket x 1 thread/core (4 total cores)
OMP: Info #219: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #172: KMP_AFFINITY: OS proc 20 maps to socket 0 core 0 thread 0 
OMP: Info #172: KMP_AFFINITY: OS proc 21 maps to socket 0 core 1 thread 1 
OMP: Info #172: KMP_AFFINITY: OS proc 22 maps to socket 0 core 2 thread 2 
OMP: Info #172: KMP_AFFINITY: OS proc 23 maps to socket 0 core 3 thread 3 
OMP: Info #255: KMP_AFFINITY: pid 1265469 tid 1265469 thread 0 bound to OS proc set 20
2025-05-15 15:16:14.203766: I tensorflow/core/platform/cpu_feature_guard.cc:145] This TensorFlow binary is optimized with Intel(R) MKL-DNN to use the following CPU instructions in performance critical operations:  SSE4.1 SSE4.2 AVX AVX2 AVX512F FMA
To enable them in non-MKL-DNN operations, rebuild TensorFlow with the appropriate compiler flags.
2025-05-15 15:16:14.219431: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2100000000 Hz
2025-05-15 15:16:14.219556: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x56257c82d810 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2025-05-15 15:16:14.219575: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Traceback (most recent call last):
  File "/home/maillet/miniconda3/envs/env_ppo/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/maillet/miniconda3/envs/env_ppo/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/maillet/RL-project/PPO/baselines-master/baselines/run.py", line 260, in <module>
    main(sys.argv)
  File "/home/maillet/RL-project/PPO/baselines-master/baselines/run.py", line 226, in main
    model, env = train(args, extra_args)
  File "/home/maillet/RL-project/PPO/baselines-master/baselines/run.py", line 88, in train
    **alg_kwargs
  File "/home/maillet/RL-project/PPO/baselines-master/baselines/ppo2/ppo2.py", line 89, in learn
    else: assert callable(lr)
AssertionError
